import React, { useEffect } from 'react'
import Navbar from '../../components/Navbar'
import Products from "../../models/ProductSchema.js";
import User from "../../models/UserSchema.js";
import mongoose from 'mongoose'
import Image from 'next/image';
// import styles from "../../styles/Detailedproduct.module.css"
import styles from "../../styles/Detailedproduct.module.css";
import { AiOutlineShoppingCart } from "react-icons/ai";
import Rating from '@mui/material/Rating';
import Head from 'next/head';

const Singleproduct = ({ detailedproduct, singleuser, usermail }) => {


    return (

        <>

            <Head>

                <title>ShopCoders | {detailedproduct.name} </title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />

            </Head>



            <div className={styles.absoluteparent}>

                <Navbar />


                <div className={styles.productparent}>

                    <div className={styles.productdiv}>

                        <div className='row'>

                            <div className={`col-lg-6 col-md-12 col-sm-12 ${styles.imgcol}`} >

                                <Image src={detailedproduct.img} alt="tshirt" width={330} height={330} />

                            </div>



                            <div className={`col-lg-6 col-md-12 col-sm-12 ${styles.detailscol}`} >


                                <div className={styles.detailsparent}>
                                    <span className={styles.dp_companyname}>{detailedproduct.category}</span>
                                    <h1 className={styles.dp_header}> {detailedproduct.name}</h1>

                                    <div className={styles.dp_rating}>
                                        <Rating name="read-only" value={4} readOnly />
                                    </div>

                                    <hr />

                                    <div className={styles.dp_desc_div}>

                                        <p className={styles.dp_desc}> {detailedproduct.desc}.  This is an extremely limited edition product which were originally from Hacktoberfest 2019.</p>
                                    </div>



                                    <div className={styles.dp_buydiv}>
                                        <div className={styles.dp_buydiv_price}>
                                            <p>  <strong>Price : </strong>${detailedproduct.price} </p>
                                            {detailedproduct.qty === 0 ? <p className={styles.dp_outofstock}>Out of Stock</p> : <p><strong>Items left : </strong>{detailedproduct.qty}</p>}

                                        </div>

                                        <div className={styles.dp_buydiv_button}>
                                            <button className={`btn btn-warning ${styles.dp_buybutton}`}  >Buy Now</button>

                                            <button className={`btn btn-warning ${styles.dp_addtocartbutton}`}  >Add to cart</button>

                                            <AiOutlineShoppingCart className={styles.shoppingcart} />
                                        </div>
                                    </div>


                                </div>



                            </div>


                        </div>



                    </div>

                </div>
            </div>




        </>

    )
}



export async function getServerSideProps(context) {

    if (!mongoose.connections[0].readyState) {
        await mongoose.connect(process.env.MONGO_URI);
    }

    const slug1 = JSON.stringify(context.query.slug);
    const slug2 = slug1.replace(/['"]+/g, '');

    console.log(slug2.split('&')[0])
    console.log(slug2.split('&')[1])




    let detailedproduct = await Products.findOne({ slug: slug2.split('&')[0] });
    let singleuser = await User.findOne({ email: slug2.split('&')[1] });
    let usermail = slug2.split('&')[1];




    return {
        props: {
            detailedproduct: JSON.parse(JSON.stringify(detailedproduct)),
            singleuser: JSON.parse(JSON.stringify(singleuser)),
            usermail: usermail,
        }
    }
}

export default Singleproduct